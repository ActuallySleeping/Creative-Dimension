plugins {
	id "fabric-loom" version "1.3.+"
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.minecraft_version + "-" + project.mod_version
group = project.maven_group

def dataOutput = "src/main/generated"

loom {
	runs {
		datagen {
			server()

			name "Data Generation"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file(dataOutput)}"

			runDir "build/datagen"
		}
	}
}

sourceSets {
	main {
		resources {
			srcDirs += dataOutput
		}
	}
}

repositories {
	maven { url = 'https://maven.nucleoid.xyz/' }
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "Ladysnake Libs"
		url = 'https://maven.ladysnake.org/releases'
	}

	// the repository for iPortal
	maven { url 'https://jitpack.io' }

	// the repository for Cloth Config
	maven { url 'https://maven.shedaniel.me' }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	include(implementation("com.moandjiezana.toml:toml4j:${project.toml4j_version}")) // importing configs
	include(modImplementation ("com.github.iPortalTeam.ImmersivePortalsMod:q_misc_util:${immersive_version}")) // creating dimensions dynamically

	// Mods that are optional for the mod to function
	modImplementation "dev.emi:trinkets:${trinkets_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

plugins {
  id "org.sonarqube" version "3.5.0.2730"
}

sonar {
  properties {
    property "sonar.projectKey", "Building-Dimension"
  }
}
